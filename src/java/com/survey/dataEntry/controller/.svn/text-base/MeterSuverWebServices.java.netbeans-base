/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.survey.dataEntry.controller;

import com.survey.dataEntry.model.MeterSurveyWebServicesModel;
import com.survey.dataEntry.model.NewSwitchingPointSurveyModel;
import com.survey.dataEntry.model.TubeWellSurveyModel;
import com.survey.dbcon.DBConnection;
import com.survey.energyMeter.model.EnergyMeterWebServiceModel;
import com.survey.tableClasses.SurveyBean;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import javax.annotation.Resource;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;

//import org.json.JSONObject;
import javax.ws.rs.core.Response;

import org.codehaus.jackson.JsonGenerationException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.type.TypeReference;
import org.json.simple.JSONArray;

import org.json.simple.JSONObject;
import javax.xml.ws.WebServiceContext;
import javax.xml.ws.handler.MessageContext;

/**
 *
 * @author Administrator
 */
@Path("/")
public class MeterSuverWebServices {

    FuseTypeController cont = new FuseTypeController();
    MeterSurveyWebServicesModel wsSurveyModel = null;
    TubeWellSurveyModel tubeWellSurveyModel = new TubeWellSurveyModel();
    @Context
// private WebServiceContext context;
    ServletContext servletContext;// =    (ServletContext) context.getMessageContext().get(MessageContext.SERVLET_CONTEXT);

    @POST
    @Path("/hello")
    @Produces(MediaType.APPLICATION_JSON)//http://192.168.1.15:8084/meter_survey/api/service/hello
    @Consumes(MediaType.APPLICATION_JSON)
    public Response sayPlainTextHello(JSONObject inputJsonObj) throws Exception {
        int survey_id = 0;
        Response response = null;
        System.out.println("Hello meter_survey");
        List<File> list = new ArrayList<File>();
        SurveyBean surveyBean = new SurveyBean();
        wsSurveyModel = new MeterSurveyWebServicesModel();
        wsSurveyModel.setConnection();
        tubeWellSurveyModel.setDriverClass(servletContext.getInitParameter("driverClass"));
        tubeWellSurveyModel.setConnectionString(servletContext.getInitParameter("connectionString"));
        tubeWellSurveyModel.setDb_username(servletContext.getInitParameter("db_username"));
        tubeWellSurveyModel.setDb_password(servletContext.getInitParameter("db_password"));
        tubeWellSurveyModel.setConnection();
        //     JSONArray json1 = wsSurveyModel.showData();
        //   System.out.println("View is" + json1.toString());
        String result = inputJsonObj.get("survey_data").toString();
        result = result.replaceAll("\\{", "").replaceAll("\\}", "");

//        try {
//
//            ObjectMapper mapper = new ObjectMapper();
//            String json = "{\"name\":\"mkyong\", \"age\":29}";
//
//            Map<String, Object> map = new HashMap<String, Object>();
//
//            // convert JSON string to Map
//            map = mapper.readValue(json, new TypeReference<Map<String, String>>() {
//            });
//
//            System.out.println(map);
//
//        } catch (JsonGenerationException e) {
//            e.printStackTrace();
//        } catch (JsonMappingException e) {
//            e.printStackTrace();
//        } catch (IOException e) {
//            e.printStackTrace();
//        }

        String[] json_data = result.split(",");
        for (int i = 0; i <= json_data.length - 1; i++) {
            String[] json_result = new String[2];
            json_result = json_data[i].split("=");
            try {
                if (json_result.length >= 2) {
                    //  json_result[1] = null;
                    System.out.println("Json Data :" + json_result[0] + " " + json_result[1]);
                    inputJsonObj.put(json_result[0].trim(), json_result[1].trim());
                } else {
                    json_result = new String[2];
                    json_result[1] = null;
                    inputJsonObj.put(json_result[0].trim(), json_result[1].trim());
                }


            } catch (Exception e) {

                //   inputJsonObj.put(json_result[0].trim(),JSONObject.class.);
                System.out.println("Exception occur: " + e);
            }

        }
        System.out.println(" " + inputJsonObj.get("meter_status"));

        try {
            surveyBean.setSurvey_type(inputJsonObj.get("survey_type").toString());
        } catch (Exception e) {
            surveyBean.setSurvey_type(null);
        }
        try {
            surveyBean.setSurvey_by(inputJsonObj.get("survey_by").toString());
        } catch (Exception e) {
            surveyBean.setSurvey_by(null);
        }
        try {
            surveyBean.setSurvey_with_contact(inputJsonObj.get("survey_with").toString());
        } catch (Exception e) {
            surveyBean.setSurvey_with_contact(null);
        }
        try {
            surveyBean.setSurvey_with_name(inputJsonObj.get("survey_with_name").toString());
        } catch (Exception e) {
            surveyBean.setSurvey_with_name(null);
        }
        try {
            surveyBean.setMeter_status(inputJsonObj.get("meter_status").toString());
        } catch (Exception e) {
            surveyBean.setMeter_status(null);
        }
        try {
            surveyBean.setSurvey_file_no(inputJsonObj.get("file_no").toString());
        } catch (Exception e) {
            surveyBean.setSurvey_file_no(null);
        }
        try {
            surveyBean.setSurvey_page_no(inputJsonObj.get("page_no").toString());
        } catch (Exception e) {
            surveyBean.setSurvey_page_no(null);
        }
        try {
            surveyBean.setB_phase(inputJsonObj.get("b_phase").toString());
        } catch (Exception e) {
            surveyBean.setB_phase(null);
        }
        try {
            if (surveyBean.getSurvey_type().equals("Switching Point")) {
                surveyBean.setContacter_functional(inputJsonObj.get("contacter_status").toString());
            } else {
                surveyBean.setStarter_functional(inputJsonObj.get("contacter_status").toString());
            }

        } catch (Exception e) {
            surveyBean.setContacter_functional(null);
        }
        try {
            surveyBean.setFuse_functional(inputJsonObj.get("fuse_status").toString());
        } catch (Exception e) {
            surveyBean.setFuse_functional(null);
        }
        try {
            surveyBean.setMccb_functional(inputJsonObj.get("mccb_status").toString());
        } catch (Exception e) {
            surveyBean.setMccb_functional(null);
        }
        try {
            surveyBean.setMeter_functional(inputJsonObj.get("meter_functional").toString());
        } catch (Exception e) {
            surveyBean.setMeter_functional(null);
        }
        try {
            surveyBean.setMeter_status(inputJsonObj.get("meter_status").toString());
        } catch (Exception e) {
            surveyBean.setMeter_status(null);
        }
        try {
            surveyBean.setMeter_no(inputJsonObj.get("meter_no").toString());
        } catch (Exception e) {
            surveyBean.setMeter_no(null);
        }
        try {
            surveyBean.setPole_no(inputJsonObj.get("db_pole_no").toString());
        } catch (Exception e) {
            surveyBean.setPole_no(null);
        }
        try {
            surveyBean.setPower(inputJsonObj.get("power").toString());
        } catch (Exception e) {
            surveyBean.setPower(null);
        }
        try {
            surveyBean.setR_phase(inputJsonObj.get("r_phase").toString());
        } catch (Exception e) {
            surveyBean.setR_phase(null);
        }
        try {
            surveyBean.setFuse1(inputJsonObj.get("fuse1").toString());
        } catch (Exception e) {
            surveyBean.setFuse1(null);
        }
        try {
            surveyBean.setFuse2(inputJsonObj.get("fuse2").toString());
        } catch (Exception e) {
            surveyBean.setFuse2(null);
        }
        try {
            surveyBean.setFuse3(inputJsonObj.get("fuse3").toString());
        } catch (Exception e) {
            surveyBean.setFuse3(null);
        }
        try {
            surveyBean.setMccb1(inputJsonObj.get("mccb1").toString());
        } catch (Exception e) {
            surveyBean.setMccb1(null);
        }
        try {
            surveyBean.setMccb2(inputJsonObj.get("mccb2").toString());
        } catch (Exception e) {
            surveyBean.setMccb2(null);
        }
        try {
            surveyBean.setMccb3(inputJsonObj.get("mccb3").toString());
        } catch (Exception e) {
            surveyBean.setMccb3(null);
        }
        try {
            surveyBean.setSurvey_date(inputJsonObj.get("survey_date").toString());
        } catch (Exception e) {
            surveyBean.setSurvey_date(null);
        }
        try {
            surveyBean.setMeter_name_auto(inputJsonObj.get("meter_name_auto").toString());
        } catch (Exception e) {
            surveyBean.setMeter_name_auto(null);
        }
        try {
            surveyBean.setService_conn_no(inputJsonObj.get("service_no").toString());
        } catch (Exception e) {
            surveyBean.setService_conn_no(null);
        }
        try {
            if (surveyBean.getSurvey_type().equals("Switching Point")) {
                if (!wsSurveyModel.getContracterId(inputJsonObj.get("contacter_type").toString()).isEmpty()) {
                    surveyBean.setContacter_id(wsSurveyModel.getContracterId(inputJsonObj.get("contacter_type").toString()));
                } else {
                    surveyBean.setContacter_type(inputJsonObj.get("contacter_type").toString());

                    if (wsSurveyModel.insertContacterRecord(surveyBean) > 0) {
                        surveyBean.setContacter_id(wsSurveyModel.getContracterId(inputJsonObj.get("contacter_type").toString()));
                    }
                }
            } else {

                if (wsSurveyModel.getStarterId(inputJsonObj.get("contacter_type").toString()) != 0) {
                    surveyBean.setStarter_id(wsSurveyModel.getStarterId(inputJsonObj.get("contacter_type").toString()));
                } else {
                    surveyBean.setStarter_type(inputJsonObj.get("contacter_type").toString());

                    if (wsSurveyModel.insertContacterRecord(surveyBean) > 0) {
                        surveyBean.setStarter_id(wsSurveyModel.getStarterId(inputJsonObj.get("contacter_type").toString()));
                    }
                }
            }

        } catch (Exception e) {
            surveyBean.setContacter_id(null);
        }
        try {
            if (!wsSurveyModel.getFuseId(inputJsonObj.get("fuse1_type").toString()).isEmpty()) {
                surveyBean.setFuse_id1(wsSurveyModel.getFuseId(inputJsonObj.get("fuse1_type").toString()));
            } else {
                surveyBean.setFuse_type1(inputJsonObj.get("fuse1_type").toString());
                if (wsSurveyModel.insertFuseRecord(inputJsonObj.get("fuse1_type").toString()) > 0) {
                    surveyBean.setFuse_id1(wsSurveyModel.getFuseId(inputJsonObj.get("fuse1_type").toString()));

                } else {
                    surveyBean.setFuse_id1(null);
                }
            }

        } catch (Exception e) {
            surveyBean.setFuse_id1(null);
        }
        try {
            if (!wsSurveyModel.getFuseId(inputJsonObj.get("fuse2_type").toString()).isEmpty()) {
                surveyBean.setFuse_id2(wsSurveyModel.getFuseId(inputJsonObj.get("fuse2_type").toString()));
            } else {
                surveyBean.setFuse_type2(inputJsonObj.get("fuse2_type").toString());
                if (wsSurveyModel.insertFuseRecord(inputJsonObj.get("fuse2_type").toString()) > 0) {
                    surveyBean.setFuse_id2(wsSurveyModel.getFuseId(inputJsonObj.get("fuse2_type").toString()));
                } else {
                    surveyBean.setFuse_id2(null);
                }
            }
        } catch (Exception e) {
            surveyBean.setFuse_id2(null);
        }
        try {
            if (!wsSurveyModel.getFuseId(inputJsonObj.get("fuse3_type").toString()).isEmpty()) {
                surveyBean.setFuse_id3(wsSurveyModel.getFuseId(inputJsonObj.get("fuse3_type").toString()));
            } else {
                surveyBean.setFuse_type3(inputJsonObj.get("fuse3_type").toString());
                if (wsSurveyModel.insertFuseRecord(inputJsonObj.get("fuse3_type").toString()) > 0) {
                    surveyBean.setFuse_id3(wsSurveyModel.getFuseId(inputJsonObj.get("fuse3_type").toString()));
                } else {
                    surveyBean.setFuse_id3(null);
                }
            }
        } catch (Exception e) {
            surveyBean.setFuse_id3(null);
        }
        try {
            if (!wsSurveyModel.getMccbId(inputJsonObj.get("mccb1_type").toString()).isEmpty()) {
                surveyBean.setMccb_id1(wsSurveyModel.getMccbId(inputJsonObj.get("mccb1_type").toString()));
            } else {
                surveyBean.setMccb_type1(inputJsonObj.get("mccb1_type").toString());
                if (wsSurveyModel.insertMccbRecord(inputJsonObj.get("mccb1_type").toString()) > 0) {
                    surveyBean.setMccb_id1(wsSurveyModel.getMccbId(inputJsonObj.get("mccb1_type").toString()));
                }
            }

        } catch (Exception e) {
            surveyBean.setMccb_id1(null);
        }
        try {
            if (!wsSurveyModel.getMccbId(inputJsonObj.get("mccb2_type").toString()).isEmpty()) {
                surveyBean.setMccb_id2(wsSurveyModel.getMccbId(inputJsonObj.get("mccb2_type").toString()));
            } else {
                surveyBean.setMccb_type2(inputJsonObj.get("mccb2_type").toString());
                if (wsSurveyModel.insertMccbRecord(inputJsonObj.get("mccb2_type").toString()) > 0) {
                    surveyBean.setMccb_id2(wsSurveyModel.getMccbId(inputJsonObj.get("mccb2_type").toString()));
                }
            }

        } catch (Exception e) {

            surveyBean.setMccb_id2(null);
        }
        try {
            if (!wsSurveyModel.getMccbId(inputJsonObj.get("mccb3_type").toString()).isEmpty()) {
                surveyBean.setMccb_id3(wsSurveyModel.getMccbId(inputJsonObj.get("mccb3_type").toString()));
            } else {
                surveyBean.setMccb_type3(inputJsonObj.get("mccb3_type").toString());
                if (wsSurveyModel.insertMccbRecord(inputJsonObj.get("mccb3_type").toString()) > 0) {
                    surveyBean.setMccb_id3(wsSurveyModel.getMccbId(inputJsonObj.get("mccb3_type").toString()));
                }
            }

        } catch (Exception e) {

            surveyBean.setMccb_id3(null);
        }
        try {
            if (surveyBean.getSurvey_type().equals("Switching Point")) {
                if (!wsSurveyModel.getContacterMakeId(inputJsonObj.get("contacter_make").toString()).isEmpty()) {
                    surveyBean.setContacter_make_id(wsSurveyModel.getContacterMakeId(inputJsonObj.get("contacter_make").toString()));
                } else {
                    surveyBean.setContacter_make(inputJsonObj.get("contacter_make").toString());
                    if (wsSurveyModel.insertContacterMakeRecord(surveyBean) > 0) {
                        surveyBean.setContacter_make_id(wsSurveyModel.getContacterMakeId(inputJsonObj.get("contacter_make").toString()));
                    }
                }
            } else {
                if (wsSurveyModel.getStarterMakeId(inputJsonObj.get("contacter_make").toString()) != 0) {
                    surveyBean.setStarter_make_id(wsSurveyModel.getStarterMakeId(inputJsonObj.get("contacter_make").toString()));
                } else {
                    surveyBean.setStarter_make(inputJsonObj.get("contacter_make").toString());
                    if (wsSurveyModel.insertContacterMakeRecord(surveyBean) > 0) {
                        surveyBean.setStarter_make_id(wsSurveyModel.getStarterMakeId(inputJsonObj.get("contacter_make").toString()));
                    }
                }
            }

        } catch (Exception e) {

            surveyBean.setContacter_make_id(null);
        }
        try {
            if (surveyBean.getSurvey_type().equals("Switching Point")) {
                surveyBean.setContacter_capacity(inputJsonObj.get("contacter_capacity").toString());
            } else {
                surveyBean.setStarter_capacity(inputJsonObj.get("contacter_capacity").toString());
            }

        } catch (Exception e) {
            surveyBean.setContacter_capacity(null);
        }
        try {
            if (!wsSurveyModel.getSwitchId(inputJsonObj.get("auto_switch").toString()).isEmpty()) {
                surveyBean.setAuto_switch_type_id(wsSurveyModel.getSwitchId(inputJsonObj.get("auto_switch").toString()));
            } else {
                surveyBean.setAuto_switch_type(inputJsonObj.get("auto_switch").toString());
                if (wsSurveyModel.insertAutoSwitchRecord(surveyBean) > 0) {
                    surveyBean.setAuto_switch_type_id(wsSurveyModel.getSwitchId(inputJsonObj.get("auto_switch").toString()));
                }
            }
        } catch (Exception e) {
            surveyBean.setAuto_switch_type_id(null);
        }
        try {
            if (!wsSurveyModel.getSwitchId(inputJsonObj.get("main_switch").toString()).isEmpty()) {
                surveyBean.setMain_switch_type_id(wsSurveyModel.getSwitchId(inputJsonObj.get("main_switch").toString()));
            } else {
                surveyBean.setMain_switch_type(inputJsonObj.get("main_switch").toString());
                if (wsSurveyModel.insertMainSwitchRecord(surveyBean) > 0) {
                    surveyBean.setMain_switch_type_id(wsSurveyModel.getSwitchId(inputJsonObj.get("main_switch").toString()));
                }
            }

        } catch (Exception e) {
            surveyBean.setMain_switch_type_id(null);
        }
        try {
            surveyBean.setMain_switch_rating(inputJsonObj.get("main_switch_rating").toString());
        } catch (Exception e) {
            surveyBean.setMain_switch_rating(null);
        }
        try {
            surveyBean.setNo_of_phase(Integer.parseInt(inputJsonObj.get("phase").toString().replace("]","")));
        } catch (Exception e) {
            surveyBean.setNo_of_phase(0);
        }
        try {
            surveyBean.setMeter_phase(Integer.parseInt(inputJsonObj.get("meter_phase").toString()));
        } catch (Exception e) {
            surveyBean.setMeter_phase(0);
        }
        try {
            surveyBean.setMeter_reading(inputJsonObj.get("meter_reading").toString());
        } catch (Exception e) {
            surveyBean.setMeter_reading(null);
        }
        try {
            surveyBean.setLatitude(inputJsonObj.get("latitude").toString());
        } catch (Exception e) {
            surveyBean.setLatitude(null);
        }
        try {
        } catch (Exception e) {
        }
        try {
            surveyBean.setLongitude(inputJsonObj.get("longitude").toString());
        } catch (Exception e) {
            surveyBean.setLongitude(null);
        }
        try {
            surveyBean.setImage_name(inputJsonObj.get("img_name").toString());
        } catch (Exception e) {
            surveyBean.setImage_name(null);
        }
        try {
            surveyBean.setSurvey_pole_no(inputJsonObj.get("pole_no").toString());
        } catch (Exception e) {
            surveyBean.setSurvey_pole_no(null);
        }
        try {
            surveyBean.setPole_no(inputJsonObj.get("db_pole_no").toString());
        } catch (Exception e) {
            surveyBean.setPole_no(null);
        }
        try {
            if (!wsSurveyModel.getEnclosureTypeId(inputJsonObj.get("enclosure").toString()).isEmpty()) {
                surveyBean.setEnclosure_type_id(wsSurveyModel.getEnclosureTypeId(inputJsonObj.get("enclosure").toString()));
            } else {
                surveyBean.setEnclosure_type(inputJsonObj.get("enclosure").toString());
                if (wsSurveyModel.insertEnclosureRecord(surveyBean) > 0) {
                    surveyBean.setEnclosure_type_id(wsSurveyModel.getEnclosureTypeId(inputJsonObj.get("enclosure").toString()));
                }
            }
        } catch (Exception e) {
            surveyBean.setEnclosure_type_id(null);
        }
        try {
            surveyBean.setReason_id(wsSurveyModel.getReasonId(inputJsonObj.get("meter_remark").toString()));
        } catch (Exception e) {
            surveyBean.setReason_id(null);
        }

        try {
            if (surveyBean.getSurvey_type().equals("Pole")) {
                // surveyBean.setRemark(inputJsonObj.get("remark1").toString());
                try {
                    surveyBean.setPole_id(Integer.parseInt(inputJsonObj.get("pole_id").toString()));
                } catch (Exception e) {
                    surveyBean.setPole_id(0);
                }
//            try {
//                surveyBean.setPole_rev_no(Integer.parseInt(inputJsonObj.get("pole_rev_no").toString()));
//            } catch (Exception e) {
//                surveyBean.setPole_rev_no(0);
//            }
            } else if (surveyBean.getSurvey_type().equals("Switching Point")) {
                surveyBean.setRemark(inputJsonObj.get("survey_remark").toString());
//            try {
//                //surveyBean.setSwitching_point_detail_id(Integer.parseInt(inputJsonObj.get("switching_point_detail_id").toString()));
//                surveyBean.setSwitching_point_detail_id(0);
//            } catch (Exception e) {
//                surveyBean.setSwitching_point_detail_id(0);
//            }
//            try {
//                surveyBean.setSwitching_rev_no(Integer.parseInt(inputJsonObj.get("switching_rev_no").toString()));
//            } catch (Exception e) {
//                surveyBean.setSwitching_rev_no(0);
//            }
            }
        } catch (Exception e) {
            System.out.println("Exception occurs: " + e);
        }
           surveyBean.setY_phase(inputJsonObj.get("y_phase").toString());
        String input = (String) inputJsonObj.get("survey_by");
        String output = "The input you sent is :" + input;
        String age = (String) inputJsonObj.get("pole_no");
        System.out.println(age);
        JSONObject outputJsonObj = new JSONObject();
        outputJsonObj.put("output", output);
        if (survey_id == 0) {
            boolean flag = false;
            System.out.println("Inserting values by model......");
            if (surveyBean.getSurvey_type().equals("Switching Point")) {
                if (wsSurveyModel.getSwitchingPoint_id(inputJsonObj.get("db_pole_no").toString()).isEmpty()) {
                    String switching_id_rev = wsSurveyModel.getSwitchingPoint_id(inputJsonObj.get("db_pole_no").toString());
                    surveyBean.setPole_id(Integer.parseInt(switching_id_rev));
                    if (switching_id_rev != null || !switching_id_rev.isEmpty()) {
                        flag = true;
                    }
                    //surveyBean.setSwitching_point_detail_id(Integer.parseInt(switching_id_rev.split("_")[0]));
                    // surveyBean.setSwitching_rev_no(Integer.parseInt(switching_id_rev.split("_")[1]));
                    // flag = wsSurveyModel.validationCheck(Integer.parseInt(switching_id_rev.split("_")[0]), Integer.parseInt(switching_id_rev.split("_")[1]), surveyBean.getSurvey_type());
                } else {
                    surveyBean.setPole_id(0);
                    flag = true;
                }
            }
            if (surveyBean.getSurvey_type().equals("Tube Well")) {
                surveyBean.setSurvey_type("tubewell_type_survey");
                if (!wsSurveyModel.getSwitchingPoint_id(inputJsonObj.get("db_pole_no").toString()).isEmpty()) {
                    String switching_id_rev = wsSurveyModel.getSwitchingPoint_id(inputJsonObj.get("db_pole_no").toString());
                    surveyBean.setPole_id(Integer.parseInt(switching_id_rev));
                    if (switching_id_rev != null || !switching_id_rev.isEmpty()) {
                        flag = true;
                    }
                    //surveyBean.setSwitching_point_detail_id(Integer.parseInt(switching_id_rev.split("_")[0]));
                    // surveyBean.setSwitching_rev_no(Integer.parseInt(switching_id_rev.split("_")[1]));
                    // flag = wsSurveyModel.validationCheck(Integer.parseInt(switching_id_rev.split("_")[0]), Integer.parseInt(switching_id_rev.split("_")[1]), surveyBean.getSurvey_type());
                } else {
                    surveyBean.setPole_id(0);
                    flag = true;
                }
            } else if (surveyBean.getSurvey_type().equals("pole_type_survey")) {
                String pole_id_rev = wsSurveyModel.getPoleId(inputJsonObj.get("db_pole_no").toString());

                surveyBean.setPole_id(Integer.parseInt(pole_id_rev.split("_")[0]));
                surveyBean.setPole_rev_no(Integer.parseInt(pole_id_rev.split("_")[1]));
                flag = wsSurveyModel.validationCheck(Integer.parseInt(pole_id_rev.split("_")[0]), Integer.parseInt(pole_id_rev.split("_")[1]), surveyBean.getSurvey_type());
            }
            String insertFlag = "";
            try{
                insertFlag = inputJsonObj.get("flag").toString();
            }catch(Exception ex){
                insertFlag = "";
            }
            if (flag && !insertFlag.equals("1")) {
                if (wsSurveyModel.insertRecord(surveyBean, list) > 0) {
                    response = Response.ok(inputJsonObj, MediaType.APPLICATION_JSON).build();
                } else {
                    //    response=Response.
                }

            }
        }
        wsSurveyModel.closeConnection();
        return response;
    }

    @POST
    @Path("/requestData")
    @Produces(MediaType.APPLICATION_JSON)//http://192.168.1.15:8084/meter_survey/api/service/hello
    @Consumes(MediaType.APPLICATION_JSON)
    public JSONObject showData(String imei ) {
        System.out.println("Access showData in MeterSurveyWebServices " + new Date());
        JSONObject obj = new JSONObject();
        wsSurveyModel = new MeterSurveyWebServicesModel();
        wsSurveyModel.setConnection();
        //String imei = "";
        JSONArray json = null;
        if(imei != null && !imei.isEmpty())
            json = wsSurveyModel.showData(imei);
        else
            json = wsSurveyModel.showData("");
        obj.put("Data", json);
        NewSwitchingPointSurveyModel nsp = new NewSwitchingPointSurveyModel();
        nsp.setConnection(wsSurveyModel.getConnection());
        json = nsp.showJsonData();
        obj.put("SurveyData", json);
        wsSurveyModel.closeConnection();
        nsp.closeConnection();
        System.out.println("Data Retrived : "+ new Date() + " " + json);
        return obj;
    }

    @POST
    @Path("/surveyCordinates")
    @Produces(MediaType.APPLICATION_JSON)//http://192.168.1.15:8084/meter_survey/api/service/hello
    @Consumes(MediaType.APPLICATION_JSON)
    public String surveyCordinates(JSONObject inputJsonObj) {
        System.out.println("Access surveyCordinates in MeterSurveyWebServices ");
        String latitude = inputJsonObj.get("latitude").toString();
        String longitude = inputJsonObj.get("longitude").toString();
        String imei = inputJsonObj.get("deviceid").toString();
        String type = inputJsonObj.get("type").toString();
        String mobile_no = inputJsonObj.get("phoneno").toString();
        JSONObject obj = new JSONObject();
        wsSurveyModel = new MeterSurveyWebServicesModel();
        wsSurveyModel.setConnection();
        int status = wsSurveyModel.insertSurveyCordinates(latitude, longitude, imei, type, mobile_no);
        obj.put("Data", status);
        System.out.println("Data Retrived : " + inputJsonObj + " " + status);
        wsSurveyModel.closeConnection();
        return "OK";
    }

    @POST
    @Path("/energyMeterData")
    @Produces(MediaType.MULTIPART_FORM_DATA)//http://192.168.1.15:8084/meter_survey/api/service/hello
    @Consumes(MediaType.MULTIPART_FORM_DATA)
    public byte[] insertEnergyMeterData(@Context HttpServletRequest requestContext,byte[] receivedBytes) {
        HttpSession session  = requestContext.getSession();
        byte[] response = null;
        String result = "Sorry!! something went wrong. ";
        System.out.println("data at " + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime()) + ": "+ requestContext.getRemoteAddr());
        for (int i = 0; i < receivedBytes.length; i++) {
            System.out.print(" " + receivedBytes[i]);
        }
        String changeCommand = session.getAttribute("sp14") == null?"":session.getAttribute("sp14").toString();
        servletContext.getInitParameter("driverClass");
        System.out.println("");
        EnergyMeterWebServiceModel wsEnergyMeterModel = new EnergyMeterWebServiceModel();
        if (receivedBytes != null && receivedBytes.length!=0)  {
            try {
                wsEnergyMeterModel.setConnection(DBConnection.getConnectionForUtf(servletContext));
                wsEnergyMeterModel.setContext(servletContext);
                wsEnergyMeterModel.setSession(session);
                String responseVal = null;
                if (receivedBytes.length == 35)
                    responseVal = wsEnergyMeterModel.junctionRefreshFunctionOne(receivedBytes,5,false);
                else if (receivedBytes.length == 17)
                    responseVal = wsEnergyMeterModel.junctionRefreshFunctionNine(receivedBytes,5,false);
                else
                    responseVal = wsEnergyMeterModel.junctionRefreshFunction(receivedBytes,5,false);
                if (responseVal != null && !responseVal.isEmpty()) {
                   response =  wsEnergyMeterModel.sendResponse(responseVal);
                   if(response != null && response.length > 0){
                       result = "Successful!!";
                   }
                }
            } catch (Exception ex) {
                System.out.println("Exception in insertEnergyMeterData"+ ex);
            }finally{
                wsEnergyMeterModel.closeConnection();
            }
        }
        System.out.println("result : " + result);
        return response;
    }

}
